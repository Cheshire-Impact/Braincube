@import url("https://fonts.googleapis.com/css2?family=Hind:wght@300;400;500;600;700&family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,100;1,300;1,400;1,500;1,700;1,900&display=swap");

form.form {
  background-color: transparent;
  font-family: "Hind", sans-serif; }
  form.form input.text,
  form.form textarea,
  form.form select,
  form.form input.date {
    font-family: "Hind", sans-serif;
    width: 100%;
    display: block;
    padding: 0.8rem;
    background-color: #fff;
    border: 1px solid #dfdfdf;
    border-color: #dfdfdf #f0f0f0 #f0f0f0 #e5e5e5;
    border-radius: 4px;
    font-size: 0.875rem;
    font-family: inherit;
    text-rendering: auto;
    color: #5b5b5b;
    letter-spacing: normal;
    word-spacing: normal;
    text-transform: none;
    text-indent: 0px;
    text-shadow: none;
    text-align: start;
    margin: 0;
    line-height: 1.42857143;
    height: 3rem;
    -webkit-box-shadow: inset 1px 1px 2px rgba(0, 0, 0, 0.05);
            box-shadow: inset 1px 1px 2px rgba(0, 0, 0, 0.05);
    -webkit-transition: all .25s ease-in-out;
    transition: all .25s ease-in-out; }
  form.form select {
    background-image: url(https://info.braincube.com/l/801593/2019-10-04/2s96/801593/10133/arrow.png);
    background-color: #fff;
    border-radius: 0;
    -webkit-appearance: none;
    -moz-appearance: none;
    -ms-user-select: none;
    background-position: calc(100% - 12px);
    background-size: auto;
    background-repeat: no-repeat;
    border-radius: 3px;
    width: 100%; }
  form.form p:not([class]) {
    font-weight: 400;
    width: 100%;
    float: left;
    padding: 0;
    margin: 1em 0; }
  form.form p.form-field {
    float: left;
    padding: 0 5px 10px;
    width: 100%;
    margin: 0;
    clear: none; }
    form.form p.form-field label {
      font-family: "Hind", sans-serif;
      font-family: 'Titillium Web', sans-serif;
      font-weight: normal;
      line-height: 1.6;
      font-size: 16px;
      color: #5b5b5b;
      text-transform: none;
      float: left;
      width: 100%;
      text-align: left;
      display: inline-block;
      margin-bottom: 0; }
      form.form p.form-field label.inline {
        margin: 5px 0;
        padding: 0;
        width: 100%;
        float: left;
        font-weight: 600; }
    form.form p.form-field textarea {
      height: 120px !important;
      -webkit-box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075);
              box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075);
      padding: 1em; }
    form.form p.form-field span > span input[type="radio"] {
      float: left;
      margin-right: 10px; }
  form.form p.pd-radio {
    margin-bottom: 1em; }
    form.form p.pd-radio label:first-of-type {
      margin-bottom: 1em;
      width: 100%; }
    form.form p.pd-radio span > span > label,
    form.form p.pd-radio span > span > input {
      float: left; }
    form.form p.pd-radio span > span > input {
      width: 20px !important;
      border: 1px solid red; }
    form.form p.pd-radio span > span > label {
      margin: -3px 0 0 0 !important;
      padding: 0;
      width: 100% !important;
      vertical-align: text-top; }
    form.form p.pd-radio span.value {
      float: left; }
  form.form p.pd-checkbox input[type="checkbox"] {
    border: 1px solid red;
    margin: 10px 0;
    float: left; }
  form.form p.pd-checkbox label {
    margin: -2px 6px 0;
    font-weight: 300;
    margin-bottom: 1em; }
  form.form p.pd-checkbox span.value {
    float: left; }
  form.form p.submit {
    width: 100%;
    text-align: center;
    margin: 1em auto;
    -webkit-transition: all .25s ease-in-out;
    transition: all .25s ease-in-out;
    clear: both !important;
    float: left; }
    form.form p.submit:hover input:hover {
      opacity: .8;
      cursor: pointer; }
    form.form p.submit input {
      background-color: #7f7f7f;
      background-image: none;
      background-repeat: no-repeat;
      background-size: auto;
      background-position: center center;
      border-radius: 4px;
      color: #000;
      display: inline-block;
      text-decoration: none;
      font-size: 16px;
      text-transform: uppercase;
      font-family: 'Titillium Web', sans-serif;
      text-align: center;
      vertical-align: middle;
      font-style: normal;
      border-style: solid;
      border-color: #7f7f7f;
      border-width: 1px;
      padding: 0.85rem;
      font-weight: 500;
      line-height: normal;
      width: 100%;
      -webkit-transition: all .25s ease;
      transition: all .25s ease; }

p.errors,
p.error {
  color: #dc070b; }

p.errors {
  margin-bottom: 1em;
  color: #ff0909 !important;
  background-color: transparent !important;
  background-color: transparent; }
  p.errors.no-label {
    display: none; }

p.form-field.required label,
span.required label {
  background: none !important; }

p.form-field.required label.field-label:after {
  content: ' *';
  color: red; }

p.error input,
p.error select,
p.error textarea {
  border: 1px solid #ff0808 !important; }

.require label:after {
  content: ' *';
  color: red !important; }

::-webkit-input-placeholder {
  /* Chrome/Opera/Safari */ }

::-moz-placeholder {
  /* Firefox 19+ */ }

:-ms-input-placeholder {
  /* IE 10+ */ }

:-moz-placeholder {
  /* Firefox 18- */ }

.form-field .description {
  font-weight: 600;
  left: 0px;
  position: relative;
  width: 90%;
  float: left;
  margin-left: 25px; }

/* Import FontAwesome for the checkmark icon */
/* hide the regular radio button */
.pd-radio input {
  opacity: 0;
  position: absolute; }

/* position the label */
.pd-radio input,
.pd-radio label {
  display: inline-block;
  vertical-align: middle;
  margin: 5px 0;
  cursor: pointer;
  width: 100%; }

.pd-radio label {
  position: relative; }

.pd-radio label.inline {
  position: relative;
  left: 25px !important;
  position: relative; }

/* style the unchecked radio button */
.pd-radio input + label:before {
  content: '';
  background: #fff;
  border: 1px solid #000;
  display: inline-block;
  vertical-align: middle;
  width: 15px;
  height: 15px;
  line-height: 15px;
  margin-right: 10px;
  text-align: center;
  position: absolute;
  margin-left: -24px;
  margin-top: 4px; }

.pd-radio input + label:before {
  border-radius: 50%; }

/* style the selected radio button */
.pd-radio input:checked + label:before {
  content: "\f00c";
  font-family: 'FontAwesome';
  color: #ffdd00; }

.pd-radio input:focus + label {
  outline: 1px solid #ddd;
  /* focus style */ }

/* hide the regular checkbox */
p.pd-checkbox {
  margin-bottom: 10px !important;
  left: 17px;
  position: relative; }

.pd-checkbox input {
  opacity: 0;
  position: absolute; }

/* position the label */
.pd-checkbox input,
.pd-checkbox label {
  display: inline-block;
  vertical-align: middle;
  margin: 5px;
  cursor: pointer; }

.pd-checkbox label {
  position: relative; }

.pd-checkbox label.inline {
  left: 25px !important;
  position: relative; }

/* style the unchecked checkbox */
.pd-checkbox input + label:before {
  content: '';
  background: #fff;
  border: 1px solid #000;
  display: inline-block;
  vertical-align: middle;
  width: 18px;
  height: 18px;
  margin-right: 10px;
  text-align: center;
  font-size: 15px;
  line-height: 18px;
  position: absolute;
  margin-left: -24px;
  margin-top: 2px;
  content: "";
  background: #fff;
  border: 2px solid #ddd;
  display: inline-block;
  vertical-align: middle;
  width: 30px;
  height: 30px;
  padding: 5px;
  margin-right: 10px;
  text-align: center;
  font-size: 15px;
  line-height: 18px;
  left: -16px;
  top: -6px; }

/* style the checked checkbox */
.pd-checkbox input:checked + label:before,
form.form p.pd-checkbox input[type="checkbox"]:before {
  content: "\f00c";
  font-family: 'FontAwesome';
  background: #ffdd00;
  color: #fff;
  border-color: #ffdd00; }

.pd-checkbox input {
  position: absolute; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */